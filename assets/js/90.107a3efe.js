(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{558:function(n,s,a){"use strict";a.r(s);var t=a(10),i=Object(t.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("常常遇到个人项目和公司项目、多个仓库之间，账户不同的问题，之前的做法是先全局配置一个常用的账户，然后在需要的仓库下修改账户信息，但是这样做很麻烦，每次都要修改，而且容易忘记，所以就研究了下"),s("code",[n._v("git")]),n._v("的多配置管理方法。")]),n._v(" "),s("p",[n._v("主要是通过"),s("code",[n._v("includeIf")]),n._v("来实现的，具体配置如下：")]),n._v(" "),s("div",{staticClass:"language-gitconfig line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('[include]\n    path = /path/to/foo.inc ; 绝对路径\n    path = foo.inc ; 相对路径\n    path = ~/foo.inc ; 查询$HOME路径\n\n# 当仓库所在目录包含gitdir之后的路径才会使用.inc文件\n[includeIf "gitdir:/path/to/foo/.git"]\n    path = /path/to/foo.inc\n\n# 所有仓库目录在gitdir之后的路径下的，都会使用.inc文件\n[includeIf "gitdir:/path/to/group/"]\n    path = /path/to/foo.inc\n\n# 路径描述也可以用定义过的环境变量代替\n[includeIf "gitdir:~/to/group/"]\n    path = /path/to/foo.inc\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("p",[n._v("也就是在"),s("code",[n._v("git")]),n._v("的配置文件中加入"),s("code",[n._v("[include]")]),n._v(",将自定义配置文件包含进来，然后通过"),s("code",[n._v("[includeIf]")]),n._v("来判断是否使用自定义配置文件。")]),n._v(" "),s("p",[n._v("当"),s("code",[n._v("Git")]),n._v("读取配置时，它会首先读取全局的"),s("code",[n._v(".gitconfig")]),n._v("文件，然后读取项目特定的配置文件。被包含的配置文件的配置项会覆盖包含指令之前的配置项，包含指令之后的配置项会覆盖被包含的配置文件的配置项。所以优先级是："),s("code",[n._v("包含指令之后的配置项 > 被包含的配置文件的配置项 > 包含指令之前的配置项")]),n._v("。")]),n._v(" "),s("p",[n._v("以"),s("code",[n._v("git")]),n._v("账号为例，也就是当配置多份"),s("code",[n._v("git")]),n._v("账号时，全局账号应该配置在包含指令之前。\n这样指定文件夹下的仓库就会使用自定义的账号，其他仓库则使用全局账号。")]),n._v(" "),s("div",{staticClass:"language-gitconfig line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('[user]\n    name = my_name\n    email = my_email\n[include]\n    path = .gitconfig_personal\n[includeIf "gitdir:/d/code/personal/"]\n    path = .gitconfig_personal\n\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("如果配置在包含指令之后，则全局账号会覆盖指定文件夹下的账号。")])])}),[],!1,null,null,null);s.default=i.exports}}]);