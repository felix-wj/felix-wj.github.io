(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{609:function(e,v,_){"use strict";_.r(v);var r=_(10),o=Object(r.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"nameserver"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#nameserver"}},[e._v("#")]),e._v(" "),v("code",[e._v("NameServer")])]),e._v(" "),v("p",[e._v("主要负责"),v("code",[e._v("Topic")]),e._v("和路由信息的管理，功能类似"),v("code",[e._v("Dubbo")]),e._v("的"),v("code",[e._v("zookeeper")]),e._v("。")]),e._v(" "),v("p",[e._v("无状态节点，可集群部署，节点之间无任何信息同步。")]),e._v(" "),v("p",[v("code",[e._v("Broker")]),e._v("每30秒向"),v("code",[e._v("NameServer")]),e._v("发送心跳包，心跳包中包含"),v("code",[e._v("topic")]),e._v("的路由信息。")]),e._v(" "),v("p",[v("code",[e._v("NameServer")]),e._v("受到"),v("code",[e._v("Broker")]),e._v("心跳包后更新"),v("code",[e._v("brokerLiveTable")]),e._v("中的信息，特别记录心跳时间"),v("code",[e._v("lastUpdateTime")])]),e._v(" "),v("p",[v("code",[e._v("NameServer")]),e._v("每隔10s扫描"),v("code",[e._v("brokerLiveTable")]),e._v("，检测表中上次收到的心跳包时间，比较当前时间与上一次时间，超过120秒在，则认为"),v("code",[e._v("Broker")]),e._v("不可用，移除路由表中与该"),v("code",[e._v("Broker")]),e._v("的相关信息。")]),e._v(" "),v("p",[e._v("生产者拉取主题的路由信息，即消息生产者并不立即感知"),v("code",[e._v("Broker")]),e._v("服务器的新增与删除。")]),e._v(" "),v("h2",{attrs:{id:"producer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#producer"}},[e._v("#")]),e._v(" "),v("code",[e._v("Producer")])]),e._v(" "),v("p",[e._v("消息生产者。")]),e._v(" "),v("p",[v("code",[e._v("Producer")]),e._v("与"),v("code",[e._v("NameServer")]),e._v("集群中的其中一个节点（随机选择）建立长连接，定期从"),v("code",[e._v("NameServer")]),e._v("取"),v("code",[e._v("Topic")]),e._v("路由信息，并向提供Topic服务的"),v("code",[e._v("Master")]),e._v("建立长连接，且定时向"),v("code",[e._v("Master")]),e._v("发送心跳。"),v("code",[e._v("Producer")]),e._v("完全无状态，可集群部署。")]),e._v(" "),v("h2",{attrs:{id:"broker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#broker"}},[e._v("#")]),e._v(" "),v("code",[e._v("Broker")])]),e._v(" "),v("p",[e._v("消息中转角色，负责消息存储、转发。")]),e._v(" "),v("p",[v("code",[e._v("Broker")]),e._v("分为"),v("code",[e._v("Master")]),e._v("和"),v("code",[e._v("Slave")]),e._v("，一个"),v("code",[e._v("Master")]),e._v("可以对应多个"),v("code",[e._v("Slave")]),e._v("，但是一个"),v("code",[e._v("Slave")]),e._v("只能对应一个"),v("code",[e._v("Master")]),e._v("，"),v("code",[e._v("Master")]),e._v("与"),v("code",[e._v("Slave")]),e._v("对应关系通过指定相同的"),v("code",[e._v("BrokerName")]),e._v("，不同的"),v("code",[e._v("BrokerId")]),e._v("来定义，"),v("code",[e._v("BrokerId")]),e._v("为0表示"),v("code",[e._v("Master")]),e._v("，非0表示"),v("code",[e._v("Slave")]),e._v("。"),v("code",[e._v("Master")]),e._v("也可以部署多个。每个"),v("code",[e._v("Broker")]),e._v("与"),v("code",[e._v("NameServer")]),e._v("集群中的所有节点建立长连接，定时注册Topic信息到所有"),v("code",[e._v("NameServer")]),e._v("。")]),e._v(" "),v("h2",{attrs:{id:"consumer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[e._v("#")]),e._v(" "),v("code",[e._v("Consumer")])]),e._v(" "),v("p",[e._v("消费者")]),e._v(" "),v("p",[v("code",[e._v("Consumer")]),e._v("与"),v("code",[e._v("NameServer")]),e._v("集群中的其中一个节点（随机选择）建立长连接，定期从"),v("code",[e._v("NameServer")]),e._v("取Topic路由信息，并向提供Topic服务的"),v("code",[e._v("Master")]),e._v("、"),v("code",[e._v("Slave")]),e._v("建立长连接，且定时向"),v("code",[e._v("Master")]),e._v("、"),v("code",[e._v("Slave")]),e._v("发送心跳。"),v("code",[e._v("Consumer")]),e._v("既可以从Master订阅消息，也可以从"),v("code",[e._v("Slave")]),e._v("订阅消息，订阅规则由Broker配置决定。")]),e._v(" "),v("h2",{attrs:{id:"producer-group"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#producer-group"}},[e._v("#")]),e._v(" "),v("code",[e._v("Producer Group")])]),e._v(" "),v("p",[e._v("用来表示一个发送信息的应用，一个"),v("code",[e._v("Prducer Group")]),e._v("下包含多个"),v("code",[e._v("Producer")]),e._v("实例，可以是多台机器，也可以是一台机器的多个进程，或者一个进程的多个"),v("code",[e._v("Producer")]),e._v("对象。一个Producer Group可以发送多个Topic消息。")]),e._v(" "),v("p",[e._v("在分布式系统中，发送事务消息时，如果"),v("code",[e._v("Producer")]),e._v("中途意外宕机，"),v("code",[e._v("Broker")]),e._v("会主动回调"),v("code",[e._v("Producer Group")]),e._v("内的任意一台机器来确认事务状态。")]),e._v(" "),v("h2",{attrs:{id:"consumer-group"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#consumer-group"}},[e._v("#")]),e._v(" "),v("code",[e._v("Consumer Group")])]),e._v(" "),v("p",[e._v("用来表示一个消费消息的应用。一个"),v("code",[e._v("Consumer Group")]),e._v("下包含多个"),v("code",[e._v("Consumer")]),e._v("实例，可以是多台机器、多个进程或一个进程的多个实例对象。不同"),v("code",[e._v("Consumer Group")]),e._v("都会受到消息，一个"),v("code",[e._v("Consumer Group")]),e._v("下的多个"),v("code",[e._v("Consumer")]),e._v("以均摊的方式消费消息）。如果设置为广播方式，那么这个"),v("code",[e._v("Consumer Group")]),e._v("下的每个实例都消费全量数据。")]),e._v(" "),v("h2",{attrs:{id:"topic"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#topic"}},[e._v("#")]),e._v(" "),v("code",[e._v("Topic")])]),e._v(" "),v("p",[e._v("消息的第一级类型")]),e._v(" "),v("p",[e._v("最细粒度的订阅单位，一个Group可以订阅多个"),v("code",[e._v("Topic")])]),e._v(" "),v("h2",{attrs:{id:"tag"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[e._v("#")]),e._v(" "),v("code",[e._v("Tag")])]),e._v(" "),v("p",[e._v("消息的第二级类型,方便灵活控制。")]),e._v(" "),v("p",[e._v("同一个"),v("code",[e._v("Consumer Group")]),e._v("下的"),v("code",[e._v("Consumer")]),e._v("，订阅Topic以及对应Tag的规则要一致，因为"),v("code",[e._v("Consumer")]),e._v("均摊消息，如果订阅逻辑不一致，可能导致丢消息。")]),e._v(" "),v("h2",{attrs:{id:"group"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#group"}},[e._v("#")]),e._v(" "),v("code",[e._v("Group")])]),e._v(" "),v("p",[e._v("一个组可以订阅多个"),v("code",[e._v("Topic")])]),e._v(" "),v("h2",{attrs:{id:"顺序消费消息原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#顺序消费消息原理"}},[e._v("#")]),e._v(" 顺序消费消息原理")]),e._v(" "),v("p",[e._v("通过指定消息hash,"),v("code",[e._v("Broker")]),e._v("根据hash将消息推送的"),v("code",[e._v("Consumer Group")]),e._v("下的同一个"),v("code",[e._v("Consumer")]),e._v("上。")])])}),[],!1,null,null,null);v.default=o.exports}}]);