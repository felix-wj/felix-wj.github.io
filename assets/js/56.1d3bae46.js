(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{523:function(t,s,a){"use strict";a.r(s);var _=a(10),e=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("记录"),s("a",{attrs:{href:"https://www.sjkjc.com/mysql-ref/",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个比较详尽的网址"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"字符串处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串处理"}},[t._v("#")]),t._v(" 字符串处理")]),t._v(" "),s("h3",{attrs:{id:"find-in-set-string-string-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-in-set-string-string-list"}},[t._v("#")]),t._v(" FIND_IN_SET(string, string_list)")]),t._v(" "),s("p",[t._v("返回指定字符串在以"),s("strong",[t._v("逗号分隔的")]),t._v("字符串列表中的位置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果其中一个参数为"),s("code",[t._v("NULL")]),t._v(",则返回"),s("code",[t._v("NULL")])])]),t._v(" "),s("li",[s("p",[t._v("如果"),s("code",[t._v("string_list")]),t._v("为空字符串，返回0")])]),t._v(" "),s("li",[s("p",[t._v("如果"),s("code",[t._v("string_list")]),t._v("中没有"),s("code",[t._v("string")]),t._v("(逗号分隔的完整字符串)，返回0")])]),t._v(" "),s("li",[s("p",[t._v("否则返回"),s("code",[t._v("string")]),t._v("在字符串列表中第一次出现的次序")])])]),t._v(" "),s("h3",{attrs:{id:"locate-substring-string-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#locate-substring-string-start"}},[t._v("#")]),t._v(" LOCATE(substring, string, start)")]),t._v(" "),s("p",[t._v("LOCATE()函数返回字符串"),s("code",[t._v("string")]),t._v("中第一次出现的子字符串"),s("code",[t._v("substring")]),t._v("的位置,参数"),s("code",[t._v("start")]),t._v("可选，搜索的起始位置。位置1是默认值。")]),t._v(" "),s("p",[t._v("如果在原始字符串中找不到子字符串，则此函数返回0。")]),t._v(" "),s("p",[t._v("此函数执行不区分大小写的搜索。")]),t._v(" "),s("p",[t._v("此功能等于POSITION()函数。")]),t._v(" "),s("h3",{attrs:{id:"substring-index-str-delim-count"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring-index-str-delim-count"}},[t._v("#")]),t._v(" SUBSTRING_INDEX(str, delim, count)")]),t._v(" "),s("h4",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("ul",[s("li",[t._v("str 必需的。原字符串。")]),t._v(" "),s("li",[t._v("delim 必需的。在原字符串中搜索的分隔符。")]),t._v(" "),s("li",[t._v("count 必需的。分隔符出现的次数。如果 count 为负数，则从字符串尾部向前开始计数分隔符，返回分隔符之后的子字符串。")])]),t._v(" "),s("h4",{attrs:{id:"返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),s("p",[t._v("函数返回一个字符串中指定分隔符出现在指定次数之前的子字符串。")]),t._v(" "),s("ol",[s("li",[t._v("如果参数 count 等于 0, SUBSTRING_INDEX() 函数返回一个空字符串 '';")]),t._v(" "),s("li",[t._v("如果参数 count 为负数时， 则从字符串尾部向前开始计数分隔符，返回分隔符之后的子字符串。")]),t._v(" "),s("li",[t._v("如果任意一个参数为 NULL 时， SUBSTRING_INDEX() 函数将返回 NULL。")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.sjkjc.com/mysql-ref/substring_index/",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"json处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json处理"}},[t._v("#")]),t._v(" JSON处理")]),t._v(" "),s("h3",{attrs:{id:"json-extract-json-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-extract-json-path"}},[t._v("#")]),t._v(" JSON_EXTRACT(json, path, ...)")]),t._v(" "),s("h4",{attrs:{id:"参数-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数-2"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("ol",[s("li",[t._v("json 必需的。一个 JSON 文档。")]),t._v(" "),s("li",[t._v("path 必需的。您应该至少指定一个路径表达式。")])]),t._v(" "),s("h4",{attrs:{id:"返回值-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值-2"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),s("p",[t._v("返回 "),s("code",[t._v("JSON")]),t._v(" 文档中由路径表达式匹配的所有的值。如果路径表达式匹配了一个值，则返回该值，如果路径表达式匹配了多个值，则返回一个包含了所有值的数组。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.sjkjc.com/mysql-ref/json_extract/",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"日期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期"}},[t._v("#")]),t._v(" 日期")]),t._v(" "),s("h3",{attrs:{id:"转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换"}},[t._v("#")]),t._v(" 转换")]),t._v(" "),s("h4",{attrs:{id:"datetime转字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datetime转字符串"}},[t._v("#")]),t._v(" datetime转字符串")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("DATE_FORMAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updated_at"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y-%m-%d %H:%i'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),t._v("\n\nDATE_FORMAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updated_at"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y年%m月'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" timeGroup\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://www.sjkjc.com/mysql-ref/date_format/",target:"_blank",rel:"noopener noreferrer"}},[t._v("format 中可采用的格式化符号"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("比较常用的:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("%Y")]),t._v(" "),s("td",[t._v("四位数字年份")])]),t._v(" "),s("tr",[s("td",[t._v("%y")]),t._v(" "),s("td",[t._v("两位数字年份")])]),t._v(" "),s("tr",[s("td",[t._v("%M")]),t._v(" "),s("td",[t._v("月份名称 (January..December)")])]),t._v(" "),s("tr",[s("td",[t._v("%m")]),t._v(" "),s("td",[t._v("两位数字月份 (00..12)")])]),t._v(" "),s("tr",[s("td",[t._v("%D")]),t._v(" "),s("td",[t._v("带有英语前缀的月份中的每天 (0th, 1st, 2nd, 3rd, …)")])]),t._v(" "),s("tr",[s("td",[t._v("%d")]),t._v(" "),s("td",[t._v("月份中的每天的两位数字表示 (00..31)")])]),t._v(" "),s("tr",[s("td",[t._v("%H")]),t._v(" "),s("td",[t._v("小时 (00..23)")])]),t._v(" "),s("tr",[s("td",[t._v("%h")]),t._v(" "),s("td",[t._v("小时 (01..12)")])]),t._v(" "),s("tr",[s("td",[t._v("%I")]),t._v(" "),s("td",[t._v("小时 (01..12)")])]),t._v(" "),s("tr",[s("td",[t._v("%i")]),t._v(" "),s("td",[t._v("分钟 (00..59)")])]),t._v(" "),s("tr",[s("td",[t._v("%S")]),t._v(" "),s("td",[t._v("秒 (00..59)")])]),t._v(" "),s("tr",[s("td",[t._v("%s")]),t._v(" "),s("td",[t._v("秒 (00..59)")])])])]),t._v(" "),s("h4",{attrs:{id:"时间戳转字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间戳转字符串"}},[t._v("#")]),t._v(" 时间戳转字符串")]),t._v(" "),s("p",[s("code",[t._v("FROM_UNIXTIME(unix_timestamp[, format])")])]),t._v(" "),s("p",[t._v("返回Unix时间标记的一个字符串，根据format格式化。如果format为空默认会使用%Y-%m-%d %H:%i:%s的格式")]),t._v(" "),s("h4",{attrs:{id:"datetime转时间戳"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datetime转时间戳"}},[t._v("#")]),t._v(" datetime转时间戳")]),t._v(" "),s("p",[s("code",[t._v("UNIX_TIMESTAMP(CURRENT_TIMESTAMP())")])]),t._v(" "),s("h4",{attrs:{id:"datetime转date"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datetime转date"}},[t._v("#")]),t._v(" datetime转date")]),t._v(" "),s("p",[s("code",[t._v("date(CURRENT_TIMESTAMP())")])]),t._v(" "),s("h3",{attrs:{id:"获取时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取时间"}},[t._v("#")]),t._v(" 获取时间")]),t._v(" "),s("h4",{attrs:{id:"当前时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当前时间"}},[t._v("#")]),t._v(" 当前时间")]),t._v(" "),s("ul",[s("li",[t._v("curdate()")]),t._v(" "),s("li",[t._v("curtime()")]),t._v(" "),s("li",[t._v("CURRENT_TIMESTAMP()")]),t._v(" "),s("li",[t._v("now()")])]),t._v(" "),s("h3",{attrs:{id:"时间计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间计算"}},[t._v("#")]),t._v(" 时间计算")]),t._v(" "),s("h4",{attrs:{id:"增减"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增减"}},[t._v("#")]),t._v(" 增减")]),t._v(" "),s("p",[s("code",[t._v("DATE_ADD(date, INTERVAL value unit)")])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 明天")]),t._v("\nDATE_SUB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DAY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 昨天")]),t._v("\nDATE_SUB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DAY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 前一小时")]),t._v("\ndate_sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 前30分钟")]),t._v("\ndate_add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("minute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[s("code",[t._v("unit")]),t._v("常用值有： "),s("code",[t._v("MICROSECOND")]),t._v(", "),s("code",[t._v("SECOND")]),t._v(", "),s("code",[t._v("MINUTE")]),t._v(", "),s("code",[t._v("HOUR")]),t._v(", "),s("code",[t._v("DAY")]),t._v(", "),s("code",[t._v("WEEK")]),t._v(", "),s("code",[t._v("MONTH")]),t._v(", "),s("code",[t._v("QUARTER")]),t._v(", "),s("code",[t._v("YEAR")]),t._v("等等。")]),t._v(" "),s("h4",{attrs:{id:"间隔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#间隔"}},[t._v("#")]),t._v(" 间隔")]),t._v(" "),s("p",[s("code",[t._v("TIMESTAMPDIFF(unit, datetime1, datetime2)")])]),t._v(" "),s("p",[t._v("返回两个日期之间的间隔(前者减后者)")]),t._v(" "),s("p",[s("code",[t._v("unit")]),t._v("可用值有： "),s("code",[t._v("MICROSECOND")]),t._v(", "),s("code",[t._v("SECOND")]),t._v(", "),s("code",[t._v("MINUTE")]),t._v(", "),s("code",[t._v("HOUR")]),t._v(", "),s("code",[t._v("DAY")]),t._v(", "),s("code",[t._v("WEEK")]),t._v(", "),s("code",[t._v("MONTH")]),t._v(", "),s("code",[t._v("QUARTER")]),t._v(", "),s("code",[t._v("YEAR")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"其他函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他函数"}},[t._v("#")]),t._v(" 其他函数")]),t._v(" "),s("h3",{attrs:{id:"cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cast"}},[t._v("#")]),t._v(" CAST()")]),t._v(" "),s("p",[s("code",[t._v("CAST(expr AS data_type)")]),t._v(" 等同于 "),s("code",[t._v("CONVERT(expr, type)")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("CAST()")]),t._v("函数将任何类型的值转换为具有指定类型的值。目标类型可以是以下类型之一："),s("code",[t._v("BINARY")]),t._v("，"),s("code",[t._v("CHAR")]),t._v("，"),s("code",[t._v("DATE")]),t._v("，"),s("code",[t._v("DATETIME")]),t._v("，"),s("code",[t._v("TIME")]),t._v("，"),s("code",[t._v("DECIMAL")]),t._v("，"),s("code",[t._v("SIGNED")]),t._v("，"),s("code",[t._v("UNSIGNED")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);