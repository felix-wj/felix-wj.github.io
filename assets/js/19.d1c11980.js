(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{487:function(t,r,a){"use strict";a.r(r);var s=a(10),i=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),r("p",[t._v("String 被声明为final， 因此它不可以被继承。")]),t._v(" "),r("p",[t._v("内部使用char 数组存储数据，该数组被声明为final，所以一旦数组被初始化后就不能再改变引用为其它数组。 而且String 类不提供改变数组内容的方法， 这些使得String 成为一个不可变类。")]),t._v(" "),r("h3",{attrs:{id:"为什么不可变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么不可变"}},[t._v("#")]),t._v(" 为什么不可变")]),t._v(" "),r("h4",{attrs:{id:"缓存哈希值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存哈希值"}},[t._v("#")]),t._v(" 缓存哈希值")]),t._v(" "),r("p",[t._v("不可变的特性可以使得hash 值也不可变， 经常被用作于map 的key。")]),t._v(" "),r("h4",{attrs:{id:"常量池"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常量池"}},[t._v("#")]),t._v(" 常量池")]),t._v(" "),r("p",[t._v("代码中字符串出现的场景非常多，包括类、 字段、 方法等等， String 不可变， 所以可以将这些字符串放到常量池中， 相同的字符串使用常量池中同一个引用， 节省内存。")]),t._v(" "),r("h4",{attrs:{id:"安全性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[t._v("#")]),t._v(" 安全性")]),t._v(" "),r("p",[t._v("String 对象经常作为参数传递， 防止在传递过程中字符串被改变。")]),t._v(" "),r("h4",{attrs:{id:"线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程安全"}},[t._v("#")]),t._v(" 线程安全")]),t._v(" "),r("p",[t._v("由于String的不可变特性， 使得它可以作为线程安全类在多线程环境中安全使用。")]),t._v(" "),r("h2",{attrs:{id:"string-stringbuffer-and-stringbuilder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string-stringbuffer-and-stringbuilder"}},[t._v("#")]),t._v(" String, StringBuffer and StringBuilder")]),t._v(" "),r("h3",{attrs:{id:"可变性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可变性"}},[t._v("#")]),t._v(" 可变性")]),t._v(" "),r("p",[t._v("String 不可变")]),t._v(" "),r("p",[t._v("StringBuilder StringBuffer可变")]),t._v(" "),r("h3",{attrs:{id:"并发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发"}},[t._v("#")]),t._v(" 并发")]),t._v(" "),r("p",[t._v("String 线程安全")]),t._v(" "),r("p",[t._v("StringBuilder 非线程安全")]),t._v(" "),r("p",[t._v("StringBuffer 方法使用synchronized进行同步， 单个方法调用是线程安全的，组合使用非线程安全。")])])}),[],!1,null,null,null);r.default=i.exports}}]);